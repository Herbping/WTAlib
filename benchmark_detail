###hackers###
##hackers_x_y_prog_prob: Probabilistic extensions of corresponding sygus benchmarks (Prob~semiring). The probability scheme we use assigns probability $\frac{1}{8}$ to shift operators, probability $\frac{1}{4}$ to arithmetic operators and $\frac{1}{2}$ to logical operators. The goal is to find the most probable solution.
##hackers_x_y_prog_Q: Extensions of corresponding sygus benchmarks (Trop~semiring). It assign weight 1 to ite operators and 0 to all other rules. The goal is to find the minimal solution.
##hackers_x_y_mulObj_Q: Extensions of corresponding sygus benchmarks (Trop~semiring * Trop~semiring). It assign weight (1,1) to ite operators and (0,1) to all other rules. The goal is to find the optimized solution that first minimize the number of ite operators and then the size of the solution.

####max####
These benchmarks extend the sygus benchmark max2 and max3 by restricting the number of if statements between $a$ and $b$ and then require to minimize the total size of the solution. These benchmarks operate over the semiring $\Trop\times_\Se\Trop$, but only impose one minimization objective.

####parity####
This benchmark extend the parity.sl by introducing weight 1 to the not statement. The quantitative object is to minimizes number of not operators in corresponding sygus benchmark.

####Rest benchmarks####: minimizes size of the solution in corresponding sygus benchmark.

