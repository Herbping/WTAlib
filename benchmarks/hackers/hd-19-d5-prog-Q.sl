( set-logic BV )
  ( define-fun hd19  (      ( x  ( BitVec 32 ) )  ( m  ( BitVec 32 ) )  ( k  ( BitVec 32 ) ) )  ( BitVec 32 )  ( bvxor     x  ( bvxor     ( bvshl     ( bvand     ( bvxor     ( bvlshr     x  k )  x )  m )  k )  ( bvand     ( bvxor     ( bvlshr     x  k )  x )  m ) ) ) )
( synth-fun f  (      ( x  ( BitVec 32 ) )  ( m  ( BitVec 32 ) )  ( k  ( BitVec 32 ) ) )  ( BitVec 32 ) (
	(Start  ( BitVec 32 ) (		NT1
		NT2
		NT3
		NT4
		NT5
		NT6
		NT7
		NT8
		NT9
))
	(NT1  ( BitVec 32 ) (		m
		#x00000000
		#x00000001
		#x0000001F
		#xFFFFFFFF
		k
		x
))
	(NT2  ( BitVec 32 ) (		(bvudiv NT1 NT1)
		(bvurem NT1 NT1)
		(bvneg NT1)
		(bvsrem NT1 NT1)
		(bvor NT1 NT1)
		(bvlshr NT1 NT1)
		(bvshl NT1 NT1)
		(bvand NT1 NT1)
		(bvmul NT1 NT1)
		(bvsdiv NT1 NT1)
		(bvxor NT1 NT1)
		(bvadd NT1 NT1)
		(bvashr NT1 NT1)
		(bvsub NT1 NT1)
		(bvnot NT1)
))
	(NT3  ( BitVec 32 ) (		(bvsub NT2 NT1)
		(bvashr NT2 NT1)
		(bvnot NT2)
		(bvsdiv NT2 NT1)
		(bvand NT2 NT1)
		(bvor NT2 NT1)
		(bvshl NT2 NT1)
		(bvurem NT2 NT1)
		(bvadd NT2 NT1)
		(bvmul NT2 NT1)
		(bvudiv NT2 NT1)
		(bvlshr NT2 NT1)
		(bvsrem NT2 NT1)
		(bvxor NT2 NT1)
		(bvneg NT2)
))
	(NT4  ( BitVec 32 ) (		(bvmul NT3 NT1)
		(bvsrem NT2 NT2)
		(bvadd NT2 NT2)
		(bvmul NT2 NT2)
		(bvashr NT2 NT2)
		(bvudiv NT3 NT1)
		(bvxor NT2 NT2)
		(bvshl NT2 NT2)
		(bvadd NT3 NT1)
		(bvor NT2 NT2)
		(bvxor NT3 NT1)
		(bvsdiv NT3 NT1)
		(bvsdiv NT2 NT2)
		(bvshl NT3 NT1)
		(bvand NT3 NT1)
		(bvlshr NT3 NT1)
		(bvlshr NT2 NT2)
		(bvneg NT3)
		(bvudiv NT2 NT2)
		(bvsub NT2 NT2)
		(bvsrem NT3 NT1)
		(bvor NT3 NT1)
		(bvand NT2 NT2)
		(bvnot NT3)
		(bvashr NT3 NT1)
		(bvurem NT2 NT2)
		(bvsub NT3 NT1)
		(bvurem NT3 NT1)
))
	(NT5  ( BitVec 32 ) (		(bvmul NT4 NT1)
		(bvnot NT4)
		(bvneg NT4)
		(bvashr NT4 NT1)
		(bvsub NT4 NT1)
		(bvshl NT4 NT1)
		(bvor NT4 NT1)
		(bvxor NT4 NT1)
		(bvadd NT4 NT1)
		(bvlshr NT4 NT1)
		(bvand NT4 NT1)
		(bvsdiv NT4 NT1)
		(bvudiv NT4 NT1)
		(bvurem NT4 NT1)
		(bvsrem NT4 NT1)
))
	(NT6  ( BitVec 32 ) (		(bvlshr NT3 NT3)
		(bvor NT3 NT3)
		(bvudiv NT3 NT3)
		(bvudiv NT5 NT1)
		(bvsdiv NT5 NT1)
		(bvnot NT5)
		(bvashr NT5 NT1)
		(bvurem NT3 NT3)
		(bvadd NT3 NT3)
		(bvor NT5 NT1)
		(bvadd NT5 NT1)
		(bvand NT3 NT3)
		(bvsrem NT5 NT1)
		(bvxor NT3 NT3)
		(bvlshr NT5 NT1)
		(bvxor NT5 NT1)
		(bvsub NT5 NT1)
		(bvneg NT5)
		(bvmul NT5 NT1)
		(bvsdiv NT3 NT3)
		(bvashr NT3 NT3)
		(bvshl NT3 NT3)
		(bvsrem NT3 NT3)
		(bvsub NT3 NT3)
		(bvand NT5 NT1)
		(bvmul NT3 NT3)
		(bvurem NT5 NT1)
		(bvshl NT5 NT1)
))
	(NT7  ( BitVec 32 ) (		(bvsdiv NT4 NT4)
		(bvand NT8 NT1)
		(bvand NT4 NT4)
		(bvashr NT8 NT1)
		(bvshl NT8 NT1)
		(bvxor NT8 NT1)
		(bvadd NT8 NT1)
		(bvsub NT4 NT4)
		(bvashr NT4 NT4)
		(bvudiv NT4 NT4)
		(bvsrem NT8 NT1)
		(bvxor NT4 NT4)
		(bvadd NT4 NT4)
		(bvlshr NT4 NT4)
		(bvmul NT4 NT4)
		(bvurem NT4 NT4)
		(bvsdiv NT8 NT1)
		(bvsrem NT4 NT4)
		(bvshl NT4 NT4)
		(bvnot NT8)
		(bvor NT4 NT4)
		(bvlshr NT8 NT1)
		(bvneg NT8)
		(bvmul NT8 NT1)
		(bvsub NT8 NT1)
		(bvor NT8 NT1)
		(bvurem NT8 NT1)
		(bvudiv NT8 NT1)
))
	(NT8  ( BitVec 32 ) (		(bvurem NT6 NT1)
		(bvudiv NT6 NT1)
		(bvor NT6 NT1)
		(bvmul NT6 NT1)
		(bvneg NT6)
		(bvadd NT6 NT1)
		(bvsrem NT6 NT1)
		(bvlshr NT6 NT1)
		(bvsdiv NT6 NT1)
		(bvnot NT6)
		(bvand NT6 NT1)
		(bvxor NT6 NT1)
		(bvshl NT6 NT1)
		(bvsub NT6 NT1)
		(bvashr NT6 NT1)
))
	(NT9  ( BitVec 32 ) (		(bvnot NT7)
		(bvand NT7 NT1)
		(bvxor NT7 NT1)
		(bvurem NT7 NT1)
		(bvadd NT7 NT1)
		(bvashr NT7 NT1)
		(bvshl NT7 NT1)
		(bvneg NT7)
		(bvmul NT7 NT1)
		(bvsdiv NT7 NT1)
		(bvudiv NT7 NT1)
		(bvlshr NT7 NT1)
		(bvsrem NT7 NT1)
		(bvor NT7 NT1)
		(bvsub NT7 NT1)
))
))
  ( declare-var x  ( BitVec 32 ) )
  ( declare-var m  ( BitVec 32 ) )
  ( declare-var k  ( BitVec 32 ) )
  ( constraint  ( =     ( hd19      x  m  k )  ( f      x  m  k ) ) )
  ( check-synth )
