( set-logic LIA )
( synth-fun max3  (      ( x  Int )  ( y  Int )  ( z  Int ) )  Int (
	(Start  Int (		NT1
		NT2
		NT4
		NT5
		NT8
))
	(NT1  Int (		z
		1
		x
		0
		y
))
	(NT2  Int (		(- NT1 NT1)
		(+ NT1 NT1)
		(ite NT3 NT1 NT1)
))
	(NT3  Bool (		(= NT1 NT1)
		(<= NT1 NT1)
		(>= NT1 NT1)
		(and NT3 NT3)
		(or NT3 NT3)
		(not NT3)
))
	(NT4  Int (		(ite NT3 NT1 NT2)
		(+ NT2 NT1)
		(ite NT3 NT2 NT1)
		(- NT2 NT1)
		(ite NT6 NT1 NT1)
))
	(NT5  Int (		(ite NT3 NT4 NT1)
		(- NT2 NT2)
		(- NT4 NT1)
		(+ NT4 NT1)
		(ite NT7 NT1 NT1)
		(ite NT3 NT2 NT2)
		(+ NT2 NT2)
))
	(NT6  Bool (		(not NT6)
		(or NT6 NT3)
		(>= NT2 NT1)
		(and NT6 NT3)
		(<= NT2 NT1)
		(= NT2 NT1)
))
	(NT7  Bool (		(or NT7 NT3)
		(= NT2 NT2)
		(= NT4 NT1)
		(>= NT2 NT2)
		(>= NT4 NT1)
		(and NT7 NT3)
		(or NT6 NT6)
		(<= NT2 NT2)
		(not NT7)
		(<= NT4 NT1)
		(and NT6 NT6)
))
	(NT8  Int (		(- NT5 NT1)
		(ite NT10 NT1 NT1)
		(ite NT3 NT5 NT1)
		(ite NT6 NT4 NT1)
		(+ NT5 NT1)
		(ite NT6 NT1 NT4)
))
	(NT10  Bool (		(= NT5 NT1)
		(and NT10 NT3)
		(<= NT5 NT1)
		(or NT10 NT3)
		(>= NT5 NT1)
		(not NT10)
))
))
  ( declare-var x  Int )
  ( declare-var y  Int )
  ( declare-var z  Int )
  ( constraint  ( >=     ( max3      x  y  z )  x ) )
  ( constraint  ( >=     ( max3      x  y  z )  y ) )
  ( constraint  ( >=     ( max3      x  y  z )  z ) )
  ( constraint  ( or     ( =     x  ( max3      x  y  z ) )  ( or     ( =     y  ( max3      x  y  z ) )  ( =     z  ( max3      x  y  z ) ) ) ) )
  ( check-synth )
