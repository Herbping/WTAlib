(set-logic LIA)
( synth-fun findIdx  (       ( x1  Int )  ( x2  Int )  ( x3  Int )  ( k  Int ) )  Int (
	(Start  Int (		x1
		x2
		x3
		k
		0
		1
		(+ NT1 NT1)
		(ite NT2 NT1 NT1)
		(+ NT3 NT1)
		(+ NT4 NT1)
		(+ NT3 NT3)
		(ite NT2 NT3 NT1)
		(ite NT5 NT1 NT1)
		(ite NT2 NT4 NT1)
		(ite NT6 NT1 NT1)
		(+ NT7 NT1)
))
	(NT1  Int (		x1
		x2
		x3
		k
		0
		1
		(+ NT1 NT1)
))
	(NT2  Bool (		(<= NT1 NT1)
		(= NT1 NT1)
		(>= NT1 NT1)
		(not NT2)
		(and NT2 NT2)
		(or NT2 NT2)
))
	(NT3  Int (		(ite NT2 NT1 NT1)
		(+ NT3 NT1)
))
	(NT4  Int (		(+ NT4 NT1)
		(+ NT3 NT3)
		(ite NT2 NT3 NT1)
		(ite NT5 NT1 NT1)
))
	(NT5  Bool (		(<= NT3 NT1)
		(= NT3 NT1)
		(>= NT3 NT1)
		(not NT5)
		(and NT5 NT2)
		(or NT5 NT2)
))
	(NT6  Bool (		(<= NT4 NT1)
		(= NT4 NT1)
		(>= NT4 NT1)
		(<= NT3 NT3)
		(= NT3 NT3)
		(>= NT3 NT3)
		(not NT6)
		(and NT6 NT2)
		(or NT6 NT2)
		(and NT5 NT5)
		(or NT5 NT5)
))
	(NT7  Int (		(ite NT2 NT4 NT1)
		(ite NT6 NT1 NT1)
		(+ NT7 NT1)
))
))
(declare-var x1 Int)
(declare-var x2 Int)
(declare-var x3 Int)
(declare-var k Int)
(constraint (=> (and (< 0 0 ) (< 0 0 ) ) (=> (< 0 0 ) (= (findIdx 0 0 0 0 ) 0 ) ) ))
(constraint (=> (and (< 3 4 ) (< 4 6 ) ) (=> (< 5 3 ) (= (findIdx 3 4 6 5 ) 0 ) ) ))
(constraint (=> (and (< (- 2) 0 ) (< 0 1 ) ) (=> (< (- 1) (- 2) ) (= (findIdx (- 2) 0 1 (- 1) ) 0 ) ) ))
(constraint (=> (and (< (- 3) (- 2) ) (< (- 2) (- 1) ) ) (=> (< (- 4) (- 3) ) (= (findIdx (- 3) (- 2) (- 1) (- 4) ) 0 ) ) ))
(constraint (=> (and (< (- 3) (- 1) ) (< (- 1) 0 ) ) (=> (< (- 2) (- 3) ) (= (findIdx (- 3) (- 1) 0 (- 2) ) 0 ) ) ))
(constraint (=> (and (< (- 1) 2 ) (< 2 3 ) ) (=> (< (- 2) (- 1) ) (= (findIdx (- 1) 2 3 (- 2) ) 0 ) ) ))
(constraint (=> (and (< 1 2 ) (< 2 3 ) ) (=> (< 0 1 ) (= (findIdx 1 2 3 0 ) 0 ) ) ))
(constraint (=> (and (< (- 1) 0 ) (< 0 1 ) ) (=> (< 2 (- 1) ) (= (findIdx (- 1) 0 1 2 ) 0 ) ) ))
(constraint (=> (and (< 0 0 ) (< 0 0 ) ) (=> (> 0 0 ) (= (findIdx 0 0 0 0 ) 3 ) ) ))
(constraint (=> (and (< 3 4 ) (< 4 6 ) ) (=> (> 5 6 ) (= (findIdx 3 4 6 5 ) 3 ) ) ))
(constraint (=> (and (< (- 2) 0 ) (< 0 1 ) ) (=> (> (- 1) 1 ) (= (findIdx (- 2) 0 1 (- 1) ) 3 ) ) ))
(constraint (=> (and (< (- 3) (- 2) ) (< (- 2) (- 1) ) ) (=> (> (- 4) (- 1) ) (= (findIdx (- 3) (- 2) (- 1) (- 4) ) 3 ) ) ))
(constraint (=> (and (< (- 3) (- 1) ) (< (- 1) 0 ) ) (=> (> (- 2) 0 ) (= (findIdx (- 3) (- 1) 0 (- 2) ) 3 ) ) ))
(constraint (=> (and (< (- 1) 2 ) (< 2 3 ) ) (=> (> (- 2) 3 ) (= (findIdx (- 1) 2 3 (- 2) ) 3 ) ) ))
(constraint (=> (and (< 1 2 ) (< 2 3 ) ) (=> (> 0 3 ) (= (findIdx 1 2 3 0 ) 3 ) ) ))
(constraint (=> (and (< (- 1) 0 ) (< 0 1 ) ) (=> (> 2 1 ) (= (findIdx (- 1) 0 1 2 ) 3 ) ) ))
(constraint (=> (and (< 0 0 ) (< 0 0 ) ) (=> (and (> 0 0 ) (< 0 0 ) ) (= (findIdx 0 0 0 0 ) 1 ) ) ))
(constraint (=> (and (< 3 4 ) (< 4 6 ) ) (=> (and (> 5 3 ) (< 5 4 ) ) (= (findIdx 3 4 6 5 ) 1 ) ) ))
(constraint (=> (and (< (- 2) 0 ) (< 0 1 ) ) (=> (and (> (- 1) (- 2) ) (< (- 1) 0 ) ) (= (findIdx (- 2) 0 1 (- 1) ) 1 ) ) ))
(constraint (=> (and (< (- 3) (- 2) ) (< (- 2) (- 1) ) ) (=> (and (> (- 4) (- 3) ) (< (- 4) (- 2) ) ) (= (findIdx (- 3) (- 2) (- 1) (- 4) ) 1 ) ) ))
(constraint (=> (and (< (- 3) (- 1) ) (< (- 1) 0 ) ) (=> (and (> (- 2) (- 3) ) (< (- 2) (- 1) ) ) (= (findIdx (- 3) (- 1) 0 (- 2) ) 1 ) ) ))
(constraint (=> (and (< (- 1) 2 ) (< 2 3 ) ) (=> (and (> (- 2) (- 1) ) (< (- 2) 2 ) ) (= (findIdx (- 1) 2 3 (- 2) ) 1 ) ) ))
(constraint (=> (and (< 1 2 ) (< 2 3 ) ) (=> (and (> 0 1 ) (< 0 2 ) ) (= (findIdx 1 2 3 0 ) 1 ) ) ))
(constraint (=> (and (< (- 1) 0 ) (< 0 1 ) ) (=> (and (> 2 (- 1) ) (< 2 0 ) ) (= (findIdx (- 1) 0 1 2 ) 1 ) ) ))
(constraint (=> (and (< 0 0 ) (< 0 0 ) ) (=> (and (> 0 0 ) (< 0 0 ) ) (= (findIdx 0 0 0 0 ) 2 ) ) ))
(constraint (=> (and (< 3 4 ) (< 4 6 ) ) (=> (and (> 5 4 ) (< 5 6 ) ) (= (findIdx 3 4 6 5 ) 2 ) ) ))
(constraint (=> (and (< (- 2) 0 ) (< 0 1 ) ) (=> (and (> (- 1) 0 ) (< (- 1) 1 ) ) (= (findIdx (- 2) 0 1 (- 1) ) 2 ) ) ))
(constraint (=> (and (< (- 3) (- 2) ) (< (- 2) (- 1) ) ) (=> (and (> (- 4) (- 2) ) (< (- 4) (- 1) ) ) (= (findIdx (- 3) (- 2) (- 1) (- 4) ) 2 ) ) ))
(constraint (=> (and (< (- 3) (- 1) ) (< (- 1) 0 ) ) (=> (and (> (- 2) (- 1) ) (< (- 2) 0 ) ) (= (findIdx (- 3) (- 1) 0 (- 2) ) 2 ) ) ))
(constraint (=> (and (< (- 1) 2 ) (< 2 3 ) ) (=> (and (> (- 2) 2 ) (< (- 2) 3 ) ) (= (findIdx (- 1) 2 3 (- 2) ) 2 ) ) ))
(constraint (=> (and (< 1 2 ) (< 2 3 ) ) (=> (and (> 0 2 ) (< 0 3 ) ) (= (findIdx 1 2 3 0 ) 2 ) ) ))
(constraint (=> (and (< (- 1) 0 ) (< 0 1 ) ) (=> (and (> 2 0 ) (< 2 1 ) ) (= (findIdx (- 1) 0 1 2 ) 2 ) ) ))
(check-synth)