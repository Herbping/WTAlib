(set-logic LIA)

( synth-fun findIdx  (        ( x1  Int )  ( x2  Int )  ( x3  Int )  ( x4  Int )  ( k  Int ) )  Int (
	(Start  Int (		x1
		x2
		x3
		x4
		k
		0
		1
		(+ NT1 NT1)
		(ite NT2 NT1 NT1)
		(+ NT3 NT1)
		(+ NT4 NT1)
		(+ NT3 NT3)
		(ite NT2 NT3 NT1)
		(ite NT5 NT1 NT1)
		(+ NT4 NT4)
		(+ NT7 NT1)
		(ite NT5 NT4 NT1)
		(ite NT5 NT1 NT4)
		(ite NT2 NT8 NT1)
		(ite NT10 NT1 NT1)
		(ite NT2 NT4 NT1)
		(ite NT6 NT1 NT1)
		(+ NT8 NT1)
))
	(NT1  Int (		x1
		x2
		x3
		x4
		k
		0
		1
		(+ NT1 NT1)
))
	(NT2  Bool (		(<= NT1 NT1)
		(not NT2)
		(and NT2 NT2)
		(or NT2 NT2)
))
	(NT3  Int (		(ite NT2 NT1 NT1)
		(+ NT3 NT1)
))
	(NT4  Int (		(+ NT4 NT1)
		(+ NT3 NT3)
		(ite NT2 NT3 NT1)
		(ite NT5 NT1 NT1)
))
	(NT5  Bool (		(<= NT3 NT1)
		(not NT5)
		(and NT5 NT2)
		(or NT5 NT2)
))
	(NT6  Bool (		(<= NT4 NT1)
		(<= NT3 NT3)
		(not NT6)
		(and NT6 NT2)
		(or NT6 NT2)
		(and NT5 NT5)
		(or NT5 NT5)
))
	(NT7  Int (		(+ NT4 NT4)
		(+ NT7 NT1)
		(ite NT5 NT4 NT1)
		(ite NT5 NT1 NT4)
		(ite NT2 NT8 NT1)
		(ite NT10 NT1 NT1)
))
	(NT8  Int (		(ite NT2 NT4 NT1)
		(ite NT6 NT1 NT1)
		(+ NT8 NT1)
))
	(NT10  Bool (		(<= NT8 NT1)
		(not NT10)
		(and NT10 NT2)
		(or NT10 NT2)
))
))
(declare-var x1 Int)
(declare-var x2 Int)
(declare-var x3 Int)
(declare-var x4 Int)
(declare-var k Int)
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) (=> (< 0 0 ) (= (findIdx 0 0 0 0 0 ) 0 ) ) ))
(constraint (=> (and (< 3 4 ) (and (< 4 5 ) (< 5 6 ) ) ) (=> (< 2 3 ) (= (findIdx 3 4 5 6 2 ) 0 ) ) ))
(constraint (=> (and (< (- 2) 0 ) (and (< 0 1 ) (< 1 2 ) ) ) (=> (< (- 1) (- 2) ) (= (findIdx (- 2) 0 1 2 (- 1) ) 0 ) ) ))
(constraint (=> (and (< (- 4) (- 3) ) (and (< (- 3) (- 1) ) (< (- 1) 0 ) ) ) (=> (< (- 2) (- 4) ) (= (findIdx (- 4) (- 3) (- 1) 0 (- 2) ) 0 ) ) ))
(constraint (=> (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) (=> (< 4 0 ) (= (findIdx 0 1 2 3 4 ) 0 ) ) ))
(constraint (=> (and (< (- 5) (- 4) ) (and (< (- 4) (- 3) ) (< (- 3) (- 1) ) ) ) (=> (< (- 2) (- 5) ) (= (findIdx (- 5) (- 4) (- 3) (- 1) (- 2) ) 0 ) ) ))
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) (=> (> 0 0 ) (= (findIdx 0 0 0 0 0 ) 4 ) ) ))
(constraint (=> (and (< 3 4 ) (and (< 4 5 ) (< 5 6 ) ) ) (=> (> 2 6 ) (= (findIdx 3 4 5 6 2 ) 4 ) ) ))
(constraint (=> (and (< (- 2) 0 ) (and (< 0 1 ) (< 1 2 ) ) ) (=> (> (- 1) 2 ) (= (findIdx (- 2) 0 1 2 (- 1) ) 4 ) ) ))
(constraint (=> (and (< (- 4) (- 3) ) (and (< (- 3) (- 1) ) (< (- 1) 0 ) ) ) (=> (> (- 2) 0 ) (= (findIdx (- 4) (- 3) (- 1) 0 (- 2) ) 4 ) ) ))
(constraint (=> (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) (=> (> 4 3 ) (= (findIdx 0 1 2 3 4 ) 4 ) ) ))
(constraint (=> (and (< (- 5) (- 4) ) (and (< (- 4) (- 3) ) (< (- 3) (- 1) ) ) ) (=> (> (- 2) (- 1) ) (= (findIdx (- 5) (- 4) (- 3) (- 1) (- 2) ) 4 ) ) ))
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) (=> (and (> 0 0 ) (< 0 0 ) ) (= (findIdx 0 0 0 0 0 ) 1 ) ) ))
(constraint (=> (and (< 3 4 ) (and (< 4 5 ) (< 5 6 ) ) ) (=> (and (> 2 3 ) (< 2 4 ) ) (= (findIdx 3 4 5 6 2 ) 1 ) ) ))
(constraint (=> (and (< (- 2) 0 ) (and (< 0 1 ) (< 1 2 ) ) ) (=> (and (> (- 1) (- 2) ) (< (- 1) 0 ) ) (= (findIdx (- 2) 0 1 2 (- 1) ) 1 ) ) ))
(constraint (=> (and (< (- 4) (- 3) ) (and (< (- 3) (- 1) ) (< (- 1) 0 ) ) ) (=> (and (> (- 2) (- 4) ) (< (- 2) (- 3) ) ) (= (findIdx (- 4) (- 3) (- 1) 0 (- 2) ) 1 ) ) ))
(constraint (=> (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) (=> (and (> 4 0 ) (< 4 1 ) ) (= (findIdx 0 1 2 3 4 ) 1 ) ) ))
(constraint (=> (and (< (- 5) (- 4) ) (and (< (- 4) (- 3) ) (< (- 3) (- 1) ) ) ) (=> (and (> (- 2) (- 5) ) (< (- 2) (- 4) ) ) (= (findIdx (- 5) (- 4) (- 3) (- 1) (- 2) ) 1 ) ) ))
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) (=> (and (> 0 0 ) (< 0 0 ) ) (= (findIdx 0 0 0 0 0 ) 2 ) ) ))
(constraint (=> (and (< 3 4 ) (and (< 4 5 ) (< 5 6 ) ) ) (=> (and (> 2 4 ) (< 2 5 ) ) (= (findIdx 3 4 5 6 2 ) 2 ) ) ))
(constraint (=> (and (< (- 2) 0 ) (and (< 0 1 ) (< 1 2 ) ) ) (=> (and (> (- 1) 0 ) (< (- 1) 1 ) ) (= (findIdx (- 2) 0 1 2 (- 1) ) 2 ) ) ))
(constraint (=> (and (< (- 4) (- 3) ) (and (< (- 3) (- 1) ) (< (- 1) 0 ) ) ) (=> (and (> (- 2) (- 3) ) (< (- 2) (- 1) ) ) (= (findIdx (- 4) (- 3) (- 1) 0 (- 2) ) 2 ) ) ))
(constraint (=> (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) (=> (and (> 4 1 ) (< 4 2 ) ) (= (findIdx 0 1 2 3 4 ) 2 ) ) ))
(constraint (=> (and (< (- 5) (- 4) ) (and (< (- 4) (- 3) ) (< (- 3) (- 1) ) ) ) (=> (and (> (- 2) (- 4) ) (< (- 2) (- 3) ) ) (= (findIdx (- 5) (- 4) (- 3) (- 1) (- 2) ) 2 ) ) ))
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) (=> (and (> 0 0 ) (< 0 0 ) ) (= (findIdx 0 0 0 0 0 ) 3 ) ) ))
(constraint (=> (and (< 3 4 ) (and (< 4 5 ) (< 5 6 ) ) ) (=> (and (> 2 5 ) (< 2 6 ) ) (= (findIdx 3 4 5 6 2 ) 3 ) ) ))
(constraint (=> (and (< (- 2) 0 ) (and (< 0 1 ) (< 1 2 ) ) ) (=> (and (> (- 1) 1 ) (< (- 1) 2 ) ) (= (findIdx (- 2) 0 1 2 (- 1) ) 3 ) ) ))
(constraint (=> (and (< (- 4) (- 3) ) (and (< (- 3) (- 1) ) (< (- 1) 0 ) ) ) (=> (and (> (- 2) (- 1) ) (< (- 2) 0 ) ) (= (findIdx (- 4) (- 3) (- 1) 0 (- 2) ) 3 ) ) ))
(constraint (=> (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) (=> (and (> 4 2 ) (< 4 3 ) ) (= (findIdx 0 1 2 3 4 ) 3 ) ) ))
(constraint (=> (and (< (- 5) (- 4) ) (and (< (- 4) (- 3) ) (< (- 3) (- 1) ) ) ) (=> (and (> (- 2) (- 3) ) (< (- 2) (- 1) ) ) (= (findIdx (- 5) (- 4) (- 3) (- 1) (- 2) ) 3 ) ) ))
(check-synth)