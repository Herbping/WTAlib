(set-logic LIA)
( synth-fun findIdx  (          ( x1  Int )  ( x2  Int )  ( x3  Int )  ( x4  Int )  ( x5  Int )  ( x6  Int )  ( k  Int ) )  Int (
	(Start  Int (		x1
		x2
		x3
		x4
		x5
		x6
		k
		0
		1
		(+ NT1 NT1)
		(ite NT2 NT1 NT1)
		(+ NT3 NT1)
		(+ NT4 NT1)
		(+ NT3 NT3)
		(ite NT2 NT3 NT1)
		(ite NT5 NT1 NT1)
		(+ NT4 NT4)
		(+ NT7 NT1)
		(ite NT5 NT4 NT1)
		(ite NT5 NT1 NT4)
		(ite NT2 NT8 NT1)
		(ite NT12 NT1 NT1)
		(ite NT2 NT4 NT1)
		(ite NT6 NT1 NT1)
		(+ NT8 NT1)
		(+ NT9 NT1)
		(ite NT2 NT7 NT1)
		(ite NT6 NT4 NT1)
		(ite NT6 NT1 NT4)
		(ite NT11 NT1 NT1)
		(ite NT5 NT8 NT1)
		(+ NT10 NT1)
		(ite NT2 NT9 NT1)
		(ite NT5 NT4 NT4)
		(ite NT5 NT7 NT1)
		(ite NT6 NT8 NT1)
		(ite NT13 NT1 NT1)
		(+ NT8 NT8)
))
	(NT1  Int (		x1
		x2
		x3
		x4
		x5
		x6
		k
		0
		1
		(+ NT1 NT1)
))
	(NT2  Bool (		(<= NT1 NT1)
		(not NT2)
		(and NT2 NT2)
		(or NT2 NT2)
))
	(NT3  Int (		(ite NT2 NT1 NT1)
		(+ NT3 NT1)
))
	(NT4  Int (		(+ NT4 NT1)
		(+ NT3 NT3)
		(ite NT2 NT3 NT1)
		(ite NT5 NT1 NT1)
))
	(NT5  Bool (		(<= NT3 NT1)
		(not NT5)
		(and NT5 NT2)
		(or NT5 NT2)
))
	(NT6  Bool (		(<= NT4 NT1)
		(<= NT3 NT3)
		(not NT6)
		(and NT6 NT2)
		(or NT6 NT2)
		(and NT5 NT5)
		(or NT5 NT5)
))
	(NT7  Int (		(+ NT4 NT4)
		(+ NT7 NT1)
		(ite NT5 NT4 NT1)
		(ite NT5 NT1 NT4)
		(ite NT2 NT8 NT1)
		(ite NT12 NT1 NT1)
))
	(NT8  Int (		(ite NT2 NT4 NT1)
		(ite NT6 NT1 NT1)
		(+ NT8 NT1)
))
	(NT9  Int (		(+ NT9 NT1)
		(ite NT2 NT7 NT1)
		(ite NT6 NT4 NT1)
		(ite NT6 NT1 NT4)
		(ite NT11 NT1 NT1)
		(ite NT5 NT8 NT1)
))
	(NT10  Int (		(+ NT10 NT1)
		(ite NT2 NT9 NT1)
		(ite NT5 NT4 NT4)
		(ite NT5 NT7 NT1)
		(ite NT6 NT8 NT1)
		(ite NT13 NT1 NT1)
		(+ NT8 NT8)
))
	(NT11  Bool (		(<= NT4 NT4)
		(<= NT7 NT1)
		(not NT11)
		(and NT6 NT6)
		(or NT6 NT6)
		(and NT11 NT2)
		(or NT11 NT2)
))
	(NT12  Bool (		(<= NT8 NT1)
		(not NT12)
		(and NT12 NT2)
		(or NT12 NT2)
))
	(NT13  Bool (		(<= NT9 NT1)
		(not NT13)
		(and NT13 NT2)
		(or NT13 NT2)
))
))
(declare-var x1 Int)
(declare-var x2 Int)
(declare-var x3 Int)
(declare-var x4 Int)
(declare-var x5 Int)
(declare-var x6 Int)
(declare-var k Int)
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) ) ) (=> (< 0 0 ) (= (findIdx 0 0 0 0 0 0 0 ) 0 ) ) ))
(constraint (=> (and (< 5 6 ) (and (< 6 7 ) (and (< 7 8 ) (and (< 8 10 ) (< 10 11 ) ) ) ) ) (=> (< 9 5 ) (= (findIdx 5 6 7 8 10 11 9 ) 0 ) ) ))
(constraint (=> (and (< -3 -2 ) (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (< 1 3 ) ) ) ) ) (=> (< 2 -3 ) (= (findIdx -3 -2 -1 0 1 3 2 ) 0 ) ) ))
(constraint (=> (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) ) ) (=> (< -3 -2 ) (= (findIdx -2 -1 0 1 2 3 -3 ) 0 ) ) ))
(constraint (=> (and (< -9 -8 ) (and (< -8 -7 ) (and (< -7 -6 ) (and (< -6 -5 ) (< -5 -4 ) ) ) ) ) (=> (< -3 -9 ) (= (findIdx -9 -8 -7 -6 -5 -4 -3 ) 0 ) ) ))
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) ) ) (=> (> 0 0 ) (= (findIdx 0 0 0 0 0 0 0 ) 6 ) ) ))
(constraint (=> (and (< 5 6 ) (and (< 6 7 ) (and (< 7 8 ) (and (< 8 10 ) (< 10 11 ) ) ) ) ) (=> (> 9 11 ) (= (findIdx 5 6 7 8 10 11 9 ) 6 ) ) ))
(constraint (=> (and (< -3 -2 ) (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (< 1 3 ) ) ) ) ) (=> (> 2 3 ) (= (findIdx -3 -2 -1 0 1 3 2 ) 6 ) ) ))
(constraint (=> (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) ) ) (=> (> -3 3 ) (= (findIdx -2 -1 0 1 2 3 -3 ) 6 ) ) ))
(constraint (=> (and (< -9 -8 ) (and (< -8 -7 ) (and (< -7 -6 ) (and (< -6 -5 ) (< -5 -4 ) ) ) ) ) (=> (> -3 -4 ) (= (findIdx -9 -8 -7 -6 -5 -4 -3 ) 6 ) ) ))
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) ) ) (=> (and (> 0 0 ) (< 0 0 ) ) (= (findIdx 0 0 0 0 0 0 0 ) 1 ) ) ))
(constraint (=> (and (< 5 6 ) (and (< 6 7 ) (and (< 7 8 ) (and (< 8 10 ) (< 10 11 ) ) ) ) ) (=> (and (> 9 5 ) (< 9 6 ) ) (= (findIdx 5 6 7 8 10 11 9 ) 1 ) ) ))
(constraint (=> (and (< -3 -2 ) (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (< 1 3 ) ) ) ) ) (=> (and (> 2 -3 ) (< 2 -2 ) ) (= (findIdx -3 -2 -1 0 1 3 2 ) 1 ) ) ))
(constraint (=> (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) ) ) (=> (and (> -3 -2 ) (< -3 -1 ) ) (= (findIdx -2 -1 0 1 2 3 -3 ) 1 ) ) ))
(constraint (=> (and (< -9 -8 ) (and (< -8 -7 ) (and (< -7 -6 ) (and (< -6 -5 ) (< -5 -4 ) ) ) ) ) (=> (and (> -3 -9 ) (< -3 -8 ) ) (= (findIdx -9 -8 -7 -6 -5 -4 -3 ) 1 ) ) ))
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) ) ) (=> (and (> 0 0 ) (< 0 0 ) ) (= (findIdx 0 0 0 0 0 0 0 ) 2 ) ) ))
(constraint (=> (and (< 5 6 ) (and (< 6 7 ) (and (< 7 8 ) (and (< 8 10 ) (< 10 11 ) ) ) ) ) (=> (and (> 9 6 ) (< 9 7 ) ) (= (findIdx 5 6 7 8 10 11 9 ) 2 ) ) ))
(constraint (=> (and (< -3 -2 ) (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (< 1 3 ) ) ) ) ) (=> (and (> 2 -2 ) (< 2 -1 ) ) (= (findIdx -3 -2 -1 0 1 3 2 ) 2 ) ) ))
(constraint (=> (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) ) ) (=> (and (> -3 -1 ) (< -3 0 ) ) (= (findIdx -2 -1 0 1 2 3 -3 ) 2 ) ) ))
(constraint (=> (and (< -9 -8 ) (and (< -8 -7 ) (and (< -7 -6 ) (and (< -6 -5 ) (< -5 -4 ) ) ) ) ) (=> (and (> -3 -8 ) (< -3 -7 ) ) (= (findIdx -9 -8 -7 -6 -5 -4 -3 ) 2 ) ) ))
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) ) ) (=> (and (> 0 0 ) (< 0 0 ) ) (= (findIdx 0 0 0 0 0 0 0 ) 3 ) ) ))
(constraint (=> (and (< 5 6 ) (and (< 6 7 ) (and (< 7 8 ) (and (< 8 10 ) (< 10 11 ) ) ) ) ) (=> (and (> 9 7 ) (< 9 8 ) ) (= (findIdx 5 6 7 8 10 11 9 ) 3 ) ) ))
(constraint (=> (and (< -3 -2 ) (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (< 1 3 ) ) ) ) ) (=> (and (> 2 -1 ) (< 2 0 ) ) (= (findIdx -3 -2 -1 0 1 3 2 ) 3 ) ) ))
(constraint (=> (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) ) ) (=> (and (> -3 0 ) (< -3 1 ) ) (= (findIdx -2 -1 0 1 2 3 -3 ) 3 ) ) ))
(constraint (=> (and (< -9 -8 ) (and (< -8 -7 ) (and (< -7 -6 ) (and (< -6 -5 ) (< -5 -4 ) ) ) ) ) (=> (and (> -3 -7 ) (< -3 -6 ) ) (= (findIdx -9 -8 -7 -6 -5 -4 -3 ) 3 ) ) ))
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) ) ) (=> (and (> 0 0 ) (< 0 0 ) ) (= (findIdx 0 0 0 0 0 0 0 ) 4 ) ) ))
(constraint (=> (and (< 5 6 ) (and (< 6 7 ) (and (< 7 8 ) (and (< 8 10 ) (< 10 11 ) ) ) ) ) (=> (and (> 9 8 ) (< 9 10 ) ) (= (findIdx 5 6 7 8 10 11 9 ) 4 ) ) ))
(constraint (=> (and (< -3 -2 ) (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (< 1 3 ) ) ) ) ) (=> (and (> 2 0 ) (< 2 1 ) ) (= (findIdx -3 -2 -1 0 1 3 2 ) 4 ) ) ))
(constraint (=> (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) ) ) (=> (and (> -3 1 ) (< -3 2 ) ) (= (findIdx -2 -1 0 1 2 3 -3 ) 4 ) ) ))
(constraint (=> (and (< -9 -8 ) (and (< -8 -7 ) (and (< -7 -6 ) (and (< -6 -5 ) (< -5 -4 ) ) ) ) ) (=> (and (> -3 -6 ) (< -3 -5 ) ) (= (findIdx -9 -8 -7 -6 -5 -4 -3 ) 4 ) ) ))
(constraint (=> (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (and (< 0 0 ) (< 0 0 ) ) ) ) ) (=> (and (> 0 0 ) (< 0 0 ) ) (= (findIdx 0 0 0 0 0 0 0 ) 5 ) ) ))
(constraint (=> (and (< 5 6 ) (and (< 6 7 ) (and (< 7 8 ) (and (< 8 10 ) (< 10 11 ) ) ) ) ) (=> (and (> 9 10 ) (< 9 11 ) ) (= (findIdx 5 6 7 8 10 11 9 ) 5 ) ) ))
(constraint (=> (and (< -3 -2 ) (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (< 1 3 ) ) ) ) ) (=> (and (> 2 1 ) (< 2 3 ) ) (= (findIdx -3 -2 -1 0 1 3 2 ) 5 ) ) ))
(constraint (=> (and (< -2 -1 ) (and (< -1 0 ) (and (< 0 1 ) (and (< 1 2 ) (< 2 3 ) ) ) ) ) (=> (and (> -3 2 ) (< -3 3 ) ) (= (findIdx -2 -1 0 1 2 3 -3 ) 5 ) ) ))
(constraint (=> (and (< -9 -8 ) (and (< -8 -7 ) (and (< -7 -6 ) (and (< -6 -5 ) (< -5 -4 ) ) ) ) ) (=> (and (> -3 -5 ) (< -3 -4 ) ) (= (findIdx -9 -8 -7 -6 -5 -4 -3 ) 5 ) ) ))
(check-synth)