(declare-fun x1! () Int)
(declare-fun x2! () Int)
(declare-fun x3! () Int)
(declare-fun x4! () Int)
(declare-fun x5! () Int)
(declare-fun x6! () Int)
(declare-fun x7! () Int)
(declare-fun x8! () Int)
(declare-fun x9! () Int)
(declare-fun x10! () Int)
(declare-fun k! () Int)
(define-fun findIdx ((x1 Int) (x2 Int) (x3 Int) (x4 Int) (x5 Int) (x6 Int) (x7 Int) (x8 Int) (x9 Int) (x10 Int) (k Int)) Int    (ite (<= x1 0) x9 1))
(assert (or (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (< k! x1! ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 0 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (> k! x10! ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 10 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x1! ) (< k! x2! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 1 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x2! ) (< k! x3! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 2 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x3! ) (< k! x4! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 3 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x4! ) (< k! x5! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 4 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x5! ) (< k! x6! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 5 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x6! ) (< k! x7! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 6 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x7! ) (< k! x8! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 7 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x8! ) (< k! x9! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 8 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x9! ) (< k! x10! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 9 ) ) )) ))
(check-sat)
(get-model)