(declare-fun x1! () Int)
(assert (= x1! -9))
(declare-fun x2! () Int)
(assert (= x2! -8))
(declare-fun x3! () Int)
(assert (= x3! -7))
(declare-fun x4! () Int)
(assert (= x4! -6))
(declare-fun x5! () Int)
(assert (= x5! -4))
(declare-fun x6! () Int)
(assert (= x6! -3))
(declare-fun x7! () Int)
(assert (= x7! -2))
(declare-fun x8! () Int)
(assert (= x8! -1))
(declare-fun x9! () Int)
(assert (= x9! 0))
(declare-fun x10! () Int)
(assert (= x10! 1))
(declare-fun k! () Int)
(assert (= k! -5))
(declare-fun findIdx ( Int  Int  Int  Int  Int  Int  Int  Int  Int  Int  Int ) Int)
(declare-fun resultF () Int)
(assert (= resultF (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k!)))
(assert (not(or (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (< k! x1! ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 0 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (> k! x10! ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 10 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x1! ) (< k! x2! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 1 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x2! ) (< k! x3! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 2 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x3! ) (< k! x4! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 3 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x4! ) (< k! x5! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 4 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x5! ) (< k! x6! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 5 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x6! ) (< k! x7! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 6 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x7! ) (< k! x8! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 7 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x8! ) (< k! x9! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 8 ) ) )) (not (=> (and (< x1! x2! ) (and (< x2! x3! ) (and (< x3! x4! ) (and (< x4! x5! ) (and (< x5! x6! ) (and (< x6! x7! ) (and (< x7! x8! ) (and (< x8! x9! ) (< x9! x10! ) ) ) ) ) ) ) ) ) (=> (and (> k! x9! ) (< k! x10! ) ) (= (findIdx x1! x2! x3! x4! x5! x6! x7! x8! x9! x10! k! ) 9 ) ) )) )))
(check-sat)
(get-model)